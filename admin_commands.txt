# Comandos de Admin (CMD/Consola)

## COMANDOS DE NPCs Y FRUTAS
1. /testnpcs
   - Aliases: /npcs, /testnpc
   - Descripci√≥n: Prueba el sistema de NPCs y muestra informaci√≥n de los NPCs activos en consola.
   - CORREGIDO: Ahora spawnea NPCs autom√°ticamente en todas las islas si no hay ninguno

2. /populateisland [islandId]
   - Aliases: /populate, /spawnnpcs
   - Descripci√≥n: Puebla una isla espec√≠fica con NPCs. Ejemplo: /populateisland pirate_cove
   - NUEVO: Spawnea NPCs en las posiciones correctas de las islas

3. /equipfruit [fruitId]
   - Aliases: /equip
   - Descripci√≥n: Equipa una fruta del diablo al jugador. Ejemplo: /equipfruit fire

4. /unequipfruit
   - Aliases: /unequip
   - Descripci√≥n: Desequipa la fruta del diablo actual del jugador.

5. /giveCurrency [player] [currency] [amount]
   - Aliases: /gC
   - Descripci√≥n: Da una cantidad de currency a un jugador. Ejemplo: /giveCurrency TonderFlashh Beli 1000

## COMANDOS DE ISLAS (NUEVO)
6. /listislands
   - Aliases: /islands
   - Descripci√≥n: Lista todas las islas disponibles con informaci√≥n detallada

7. /tptoisle [player] [islandId]
   - Aliases: /tpisle
   - Descripci√≥n: Teleporta a un jugador a una isla espec√≠fica. Ejemplo: /tptoisle TonderFlashh pirate_cove

## COMANDOS DE BARCOS ‚≠ê CORREGIDOS ‚≠ê
8. /listboats
   - Aliases: /boats
   - Descripci√≥n: Lista todos los barcos disponibles en el juego con sus stats y costos.

9. /giveboat [player] [boatId]
   - Aliases: /givevessel
   - Descripci√≥n: Da un barco espec√≠fico a un jugador. Ejemplo: /giveboat TonderFlashh war_galleon

10. /spawnboat [player]  
    - Aliases: /spawn, /sb
    - Descripci√≥n: Spawnea el barco actual del jugador en el mundo.
    - ‚úÖ PROBLEMA RESUELTO: Orientaci√≥n correcta - La proa mira hacia donde mira el jugador
    - ‚úÖ SISTEMA DE CONTROL IMPLEMENTADO: Click en tim√≥n o sentarse para controlarlo
    - ‚úÖ Flotaci√≥n correcta en Y=8 (3 studs sobre el agua)

11. /despawnboat [player]
    - Aliases: /despawn, /db
    - Descripci√≥n: Despawnea el barco de un jugador (guarda posici√≥n).
    - NUEVO: Comando para limpiar barcos durante testing

## COMANDOS DE RECURSOS Y CRAFTING
12. /listresources [player]
    - Aliases: /resources, /listres
    - Descripci√≥n: Muestra todos los recursos que tiene un jugador en su inventario.

13. /listrecipes
    - Aliases: /recipes, /crafting
    - Descripci√≥n: Muestra todas las recetas de crafting disponibles para barcos.

14. /craftboat [player] [recipeId]
    - Aliases: /craft
    - Descripci√≥n: Craftea un barco usando los materiales del jugador. Ejemplo: /craftboat TonderFlashh basic_fishing_boat

## COMANDOS DE DIAGN√ìSTICO Y TESTING (NUEVO)
15. /testwater [player]
    - Aliases: /testagua, /water
    - Descripci√≥n: Diagnostica el sistema de agua y flotaci√≥n para un jugador
    - NUEVO: Muestra estado completo del agua, flotaci√≥n y da recomendaciones
    - Uso: /testwater TonderFlashh (o sin par√°metro para ti mismo)

# Comandos √∫tiles para testing (no admin, pero √∫tiles)

16. /listfruits
    - Aliases: /fruits
    - Descripci√≥n: Lista todas las frutas del diablo disponibles.

# ‚≠ê PROBLEMAS RESUELTOS - BARCOS CORREGIDOS ‚≠ê

## PROBLEMA DE ORIENTACI√ìN RESUELTO:
‚ùå ANTES: Barcos aparec√≠an de cabeza/al rev√©s sin importar la direcci√≥n del jugador
‚úÖ AHORA: 
   - ‚úÖ CORREGIDO CON DOCUMENTACI√ìN OFICIAL: Usando CFrame.lookAt() correctamente
   - ‚úÖ M√©todo seg√∫n Roblox Developer Documentation: CFrame.lookAt(position, target)
   - ‚úÖ Proa siempre mira hacia donde mira el jugador al spawnear
   - ‚úÖ Todas las partes del barco (tim√≥n, vela, m√°stil, proa) respetan la orientaci√≥n correcta
   - ‚úÖ Barandas y ca√±ones tambi√©n orientados correctamente
   - ‚úÖ Casos fallback tambi√©n corregidos usando CFrame.lookAt()

## SISTEMA DE CONTROL IMPLEMENTADO:
‚ùå ANTES: No hab√≠a forma de controlar el barco despu√©s de spawnearlo
‚úÖ AHORA: 
   - üéÆ CONTROLES FUNCIONALES:
     * Click en el tim√≥n para empezar/parar control
     * Sentarse en el asiento del tim√≥n para control autom√°tico
     * W/S o ‚Üë/‚Üì - Acelerar/Reversa
     * A/D o ‚Üê/‚Üí - Girar tim√≥n (rotaci√≥n)
     * X - Salir del control
   - üö¢ Sistema de navegaci√≥n en tiempo real
   - üß≠ Movimiento relativo a la orientaci√≥n del barco (no absoluto)
   - ‚öì Flotaci√≥n mantiene estabilidad mientras navega

## CORRECCIONES T√âCNICAS REALIZADAS:
‚úÖ CAMBIO PRINCIPAL: new CFrame(position, lookAt) ‚Üí CFrame.lookAt(position, target)
‚úÖ Seg√∫n documentaci√≥n oficial: CFrame.lookAt(at, lookAt) crea orientaci√≥n correcta
‚úÖ El primer par√°metro es la posici√≥n donde colocar el barco
‚úÖ El segundo par√°metro es hacia d√≥nde debe mirar la proa del barco
‚úÖ Aplicado en spawnBoat() y teleportToNearestDock()
‚úÖ SetPrimaryPartCFrame() aplica correctamente la orientaci√≥n a todo el modelo
‚úÖ BoatController del cliente implementado con UserInputService
‚úÖ Eventos de red para navegaci√≥n (startBoatNavigation, stopBoatNavigation)
‚úÖ Sistema de detecci√≥n de ClickDetector y Seat
‚úÖ Movimiento relativo usando LookVector y RightVector del barco
‚úÖ Comando /despawnboat para testing y limpieza

# FLUJO DE TESTING PARA BARCOS CORREGIDOS:
1. /spawnboat [player] - ‚úÖ VERIFICAR: Barco aparece DERECHO (no de cabeza) y FLOTA
2. ‚úÖ VALIDAR: El barco debe aparecer a nivel Y=8 (flotando sobre el agua)
3. ‚úÖ CONFIRMAR: El barco NO aparece de cabeza ni cae bajo el mapa
4. ‚úÖ PROBAR: La orientaci√≥n del barco debe ser correcta (proa hacia adelante)
5. Click en el tim√≥n del barco o sentarse - Activar controles
6. Usar WASD o flechas para navegar - Probar movimiento
7. Presionar X para salir del control - Verificar desactivaci√≥n
8. /despawnboat [player] - Limpiar para m√°s pruebas

# COMPORTAMIENTO ESPERADO CORREGIDO:
üéØ ORIENTACI√ìN: ‚úÖ Barco aparece DERECHO y orientado hacia donde mira el jugador
üåä FLOTACI√ìN: ‚úÖ Barco aparece a Y=8 y flota correctamente sobre el agua
üéÆ CONTROL: Click/sentarse ‚Üí aparecen instrucciones ‚Üí WASD funciona perfectamente
üß≠ NAVEGACI√ìN: W/S mueve hacia adelante/atr√°s, A/D gira el barco
‚öì ESTABILIDAD: El barco mantiene flotaci√≥n y orientaci√≥n correcta
‚ùå SALIDA: X termina control, el barco para gradualmente

# FLUJO DE TESTING FINAL:
1. /spawnboat [player] - ‚úÖ VERIFICAR: Barco aparece DERECHO orientado hacia donde miras
2. ‚úÖ VALIDAR: El barco debe aparecer a nivel Y=8 flotando correctamente
3. ‚úÖ CONFIRMAR: El barco NO aparece de cabeza ni volcado
4. ‚úÖ PROBAR: La orientaci√≥n del barco es correcta (proa hacia adelante donde miras)
5. Click en el tim√≥n del barco o sentarse - Activar controles
6. Usar WASD o flechas para navegar - Probar movimiento fluido
7. Presionar X para salir del control - Verificar desactivaci√≥n
8. /despawnboat [player] - Limpiar para m√°s pruebas

# CORRECCI√ìN T√âCNICA FINAL - PROBLEMA RESUELTO:
‚úÖ SOLUCI√ìN IMPLEMENTADA: Eliminaci√≥n de rotaci√≥n adicional innecesaria
‚úÖ SEGUIR DOCUMENTACI√ìN OFICIAL: CFrame.lookAt(at, lookAt) maneja orientaci√≥n autom√°ticamente
‚úÖ ANTES: spawnOrientation = baseLookAt.mul(CFrame.Angles(0, math.rad(180), 0))
‚úÖ AHORA: spawnOrientation = CFrame.lookAt(spawnPosition, lookAtTarget)
‚úÖ RESULTADO: El barco aparece correctamente orientado SIN estar de cabeza
‚úÖ DOCUMENTACI√ìN OFICIAL CONFIRMADA: CFrame.lookAt() ya orienta correctamente sin rotaciones adicionales

# CORRECCIONES IMPLEMENTADAS:
‚úÖ NPCs aparecen en alturas correctas (por encima del agua)
‚úÖ Barcos spawean con orientaci√≥n correcta (proa hacia adelante) - CORREGIDO: Ya no aparecen al rev√©s
‚úÖ Agua funcional a nivel 5 studs - JUGADORES PUEDEN FLOTAR
‚úÖ Islas a alturas correctas con docks funcionales
‚úÖ Sistema integrado de islas y NPCs
‚úÖ WaterService para flotaci√≥n autom√°tica de jugadores
‚úÖ Superficie de agua s√≥lida que permite caminar y flotar
‚úÖ NUEVO: Nataci√≥n solo cuando est√° BAJO el agua (no al caminar sobre superficie)

# PROBLEMA DEL AGUA RESUELTO:
üåä ANTES: Jugadores ca√≠an al fondo, barcos no flotaban, barcos aparec√≠an al rev√©s
üåä AHORA: 
   - Superficie de agua s√≥lida en Y=5 (CanCollide=true)
   - Jugadores pueden CAMINAR sobre la superficie del agua (Y=5)
   - Efectos de nataci√≥n SOLO se activan si caes BAJO el agua (Y < 5)
   - Barcos flotan correctamente a Y=8 (3 studs sobre el agua)
   - BARCOS APARECEN CON ORIENTACI√ìN CORRECTA (no al rev√©s)
   - Comando /testwater para diagnosticar problemas

# NUEVO COMPORTAMIENTO DEL AGUA:
üö∂ CAMINAR SOBRE AGUA: Si est√°s en Y >= 5, caminas normalmente (sin efectos de nataci√≥n)
üèä NADAR BAJO AGUA: Si est√°s en Y < 5, se activan efectos de nataci√≥n y flotaci√≥n autom√°tica
‚õµ BARCOS: Flotan a Y=8, orientados correctamente hacia donde miras

# FLUJO DE TESTING PARA AGUA:
1. /testwater - Verificar estado del sistema de agua
2. Caminar sobre el oc√©ano (nivel Y=5) - DEBER√çAS CAMINAR NORMALMENTE
3. Saltar bajo el agua - Se activar√°n efectos de nataci√≥n y flotar√°s autom√°ticamente
4. /spawnboat - Probar que el barco flota en Y=8 CON ORIENTACI√ìN CORRECTA
5. /testwater despu√©s de probar - Verificar comportamiento correcto

# FLUJO DE TESTING PARA NPCs:
1. /testnpcs - Verificar NPCs activos (spawnea autom√°ticamente si no hay)
2. /listislands - Ver todas las islas disponibles
3. /populateisland pirate_cove - Poblar isla espec√≠fica con enemigos
4. /tptoisle TonderFlashh pirate_cove - Teleportarse para probar combate

# FLUJO DE TESTING PARA BARCOS Y NAVEGACI√ìN:
1. /spawnboat TonderFlashh - Spawnear barco DELANTE del jugador
2. Verificar que flota correctamente en el agua y est√° orientado hacia donde miras
3. El barco aparece a 30 studs delante tuyo en la direcci√≥n que est√°s mirando
4. /tptoisle TonderFlashh volcano_forge - Ir a otra isla
5. /spawnboat TonderFlashh - Verificar que siempre aparece delante sin importar la ubicaci√≥n

# NUEVAS RECETAS DE CRAFTING B√ÅSICAS:
- basic_fishing_boat: 25 Madera + 10 Cuerda + 15 Tela
- merchant_sloop: 35 Madera + 15 Cuerda + 20 Tela + 5 Hierro

# FLUJO DE TESTING RECOMENDADO:
1. /testwater [player] - NUEVO: Diagnosticar agua primero
2. /listresources [player] - Ver recursos actuales
3. /listrecipes - Ver qu√© se puede craftear  
4. /craftboat [player] [recipeId] - Craftear barco
5. /spawnboat [player] - Spawnearlo en el mundo (deber√≠a flotar)
6. /testwater [player] - Verificar que todo funciona correctamente

# SI EL AGUA NO FUNCIONA:
1. /testwater - Ver diagn√≥stico completo
2. Verificar que WaterSurface tiene CanCollide=true
3. Verificar que el jugador est√° en Y <= 8 para activar flotaci√≥n
4. El sistema deber√≠a crear autom√°ticamente BodyVelocity para flotar
5. Reportar si persisten problemas

# CORRECCI√ìN T√âCNICA INVERTIDA:
‚úÖ CAMBIO ACTUAL: playerCFrame.LookVector.mul(10) ‚Üí playerCFrame.LookVector.mul(-10)
‚úÖ Vector invertido: El barco ahora mira hacia donde TIENES LA ESPALDA
‚úÖ Casos fallback: Vector3(0, 0, 10) ‚Üí Vector3(0, 0, -10)
‚úÖ Prop√≥sito: Testing para determinar orientaci√≥n correcta
